---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nifi-intra-nodes
spec:
  podSelector:
    matchLabels: &labels_selector
      app: nifi
  ingress:
    - from:
      - namespaceSelector:
          matchLabels: *labels_selector
      ports: &intranodes_ports
        - port: 6007
          protocol: TCP
        - port: 8443
          protocol: TCP
  egress:
    - ports: *intranodes_ports
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nifi-to-zookeeper
spec:
  podSelector:
    matchLabels: &labels_selector
      app: nifi
  egress:
    - ports:
      - port: 2181
        protocol: TCP
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: nifi-to-dex
spec:
  podSelector:
    matchLabels:
      app: nifi
  egress:
    - ports:
        - port: 32000
          protocol: TCP
        - port: 5556
          protocol: TCP

#---
#apiVersion: crd.projectcalico.org/v1
#kind: NetworkPolicy
#metadata:
#  name: nifi-to-zookeeper
#spec:
#  selector: app == 'nifi' && nifi_cr == 'nifisec'
#  types:
#    - Egress
#  egress:
#    - action: Allow
#      protocol: TCP
#      source:
#        selector: app == 'nifi' && nifi_cr == 'nifisec'
#      destination:
#        ports:
#          - 2181
#---
#apiVersion: crd.projectcalico.org/v1
#kind: NetworkPolicy
#metadata:
#  name: allow-all-ingress
#spec:
#  ingress:
#    - action: allow
#      source:
#        selector: app == 'nifi' && nifi_cr == 'nifisec'
#---
#apiVersion: crd.projectcalico.org/v1
#kind: NetworkPolicy
#metadata:
#  name: allow-all-egress
#spec:
#  egress:
#    - action: allow
#      source:
#        selector: app == 'nifi' && nifi_cr == 'nifisec'

# apiVersion: crd.projectcalico.org/v1
  #kind: NetworkPolicy
  #metadata:
  #  name: allow-icmp
  #spec:
  #  selector: app == 'nifi'
  #  ingress:
  #    - action: Allow
  #      protocol: ICMP
  #      source:
  #        selector: app == 'nifi'