apiVersion: v1
kind: Pod
metadata:
  annotations:
    prometheus.io/port: "9020"
    prometheus.io/scrape: "true"
  labels:
    app: nifi
    nifi_cr: nifi
    nodeId: "0"
  name: nifivrz2v
  namespace: nifi-demo
spec:
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - podAffinityTerm:
          labelSelector:
            matchLabels:
              app: nifi
              nifi_cr: nifi
          topologyKey: kubernetes.io/hostname
        weight: 100
  containers:
  - command:
    - bash
    - -ce
    - "\nprop_replace () {\n\ttarget_file=${NIFI_HOME}/conf/${3:-nifi.properties}\n\techo
      \"updating ${1} in ${target_file}\"\n\tif egrep \"^${1}=\" ${target_file} &>
      /dev/null; then\n\t\tsed -i -e \"s|^$1=.*$|$1=$2|\"  ${target_file}\n\telse\n\t\techo
      ${1}=${2} >> ${target_file}\n\tfi\n}\nFQDN=$(hostname -f)\ncp ${NIFI_HOME}/tmp/*
      ${NIFI_HOME}/conf/ \n#cat \"${NIFI_HOME}/conf/nifi.temp\" > \"${NIFI_HOME}/conf/nifi.properties\"\n\nexec
      bin/nifi.sh run\n"
    env:
    - name: NIFI_ZOOKEEPER_CONNECT_STRING
      value: zookeepercluster-client.zookeeper:2181
    image: apache/nifi:1.11.0
    imagePullPolicy: IfNotPresent
    lifecycle:
      preStop:
        exec:
          command:
          - bash
          - -c
          - $NIFI_HOME/bin/nifi.sh stop
    livenessProbe:
      failureThreshold: 3
      initialDelaySeconds: 90
      periodSeconds: 60
      successThreshold: 1
      tcpSocket:
        port: 8080
      timeoutSeconds: 20
    name: nifi
    ports:
    - containerPort: 8080
      name: http
      protocol: TCP
    - containerPort: 6007
      name: cluster
      protocol: TCP
    - containerPort: 10000
      name: s2s
      protocol: TCP
    - containerPort: 8090
      name: external
      protocol: TCP
    - containerPort: 9020
      name: metrics
      protocol: TCP
    readinessProbe:
      exec:
        command:
        - bash
        - -c
        - "curl -kv \\\nhttp://$(hostname -f):8080/nifi-api/controller/cluster > $NIFI_BASE_DIR/data/cluster.state\nSTATUS=$(jq
          -r \".cluster.nodes[] | select((.address==\\\"$(hostname -f)\\\") or .address==\\\"localhost\\\")
          | .status\" $NIFI_BASE_DIR/data/cluster.state)\nif [[ ! $STATUS = \"CONNECTED\"
          ]]; then\n\techo \"Node not found with CONNECTED state. Full cluster state:\"\n\tjq
          . $NIFI_BASE_DIR/data/cluster.state\n\texit 1\nfi"
      failureThreshold: 3
      initialDelaySeconds: 60
      periodSeconds: 20
      successThreshold: 1
      timeoutSeconds: 10
    resources:
      limits:
        cpu: "1"
        memory: 1Gi
      requests:
        cpu: "1"
        memory: 1Gi
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /opt/nifi/provenance_repository
      name: nifi-data-0
    - mountPath: /opt/nifi/content_repository
      name: nifi-data-1
    - mountPath: /opt/nifi/nifi-current/tmp
      name: node-config
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-c74wq
      readOnly: true
  hostname: nifi-0
  initContainers:
  - command:
    - sh
    - -c
    - "\n\t\t\t\t\t\techo trying to contact zookeepercluster-client.zookeeper:2181\n\t\t\t\t\t\tuntil
      nc -vzw 1 zookeepercluster-client.zookeeper 2181; do\n\t\t\t\t\t\techo \"waiting
      for zookeeper...\"\n\t\t\t\t\t\tsleep 2\n\t\t\t\t\t\tdone"
    image: busybox
    imagePullPolicy: Always
    name: zookeeper
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-c74wq
      readOnly: true
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  subdomain: nifi-headless
  terminationGracePeriodSeconds: 120
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: nifi-data-0
    persistentVolumeClaim:
      claimName: nifi-storagewzm8q
  - name: nifi-data-1
    persistentVolumeClaim:
      claimName: nifi-storagefj5bm
  - configMap:
      defaultMode: 420
      name: nifi-config-0
    name: node-config
  - name: default-token-c74wq
    secret:
      defaultMode: 420
      secretName: default-token-c74wq